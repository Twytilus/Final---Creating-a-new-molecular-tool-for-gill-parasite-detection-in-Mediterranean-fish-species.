library(ggplot2)
library(dplyr)
library(tidyr)
library(broom)
library(grid)
library(cowplot)
library(corrplot)
library(Hmisc)
library(ARTool)
library(EBImage)
library(ggplot2)
library(dplyr)
library(tidyr)
library(broom)
library(grid)
library(cowplot)
library(corrplot)
library(Hmisc)
library(ARTool)
library(EBImage)
setwd("C:/Users/user/Desktop/Methods/ggplot") #(you change it to the path to your folder)
setwd("C:/Users/user/Desktop/Methods/ggplot") #(you change it to the path to your folder)
#### load the data. see that we use "stringsAsFactors=TRUE" so our groups are already set as factors.
pi_data=read.csv("course_pi_curve_pars_NLS_fixedparms.csv", header=TRUE, stringsAsFactors = TRUE)
str(pi_data)
library(ggplot2)
ggplot(pi_data, aes(x=Group, y=Am))+
geom_point(aes(color=Group))
#### check you have these packages installed.
# if not, use the following command: install.packages("name.of.package")
install.packages
#### check you have these packages installed.
# if not, use the following command: install.packages("name.of.package")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("")
install.packages("")library(ggplot2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(broom)
library(grid)
library(cowplot)
library(corrplot)
library(Hmisc)
library(ARTool)
library(EBImage)
library(ggplot2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(broom)
library(grid)
library(cowplot)
library(corrplot)
library(Hmisc)
library(ARTool)
library(EBImage)
install.packages("EBImage")
install.packages("EBImage")
library(ggplot2)
library(dplyr)
library(tidyr)
library(broom)
library(grid)
library(cowplot)
library(corrplot)
library(Hmisc)
library(ARTool)
library(EBImage)
#load the metadata- NOTE: we work at the transect level.
photo_metadata=read.csv("Photosurvey_metadata.csv", header=TRUE, row.names=1, stringsAsFactors = TRUE)
str(photo_metadata)
# load the processed and filtered coverage data by taxonomic group
photosurvey_coverage=read.csv("Photosurvey_processed_data.csv", header=TRUE, row.names=1, stringsAsFactors = TRUE)
str(photosurvey_coverage)
#make sure the order of trnasect_IDs is the same in the data and the metadata
ord=match(row.names(photosurvey_coverage), row.names(photo_metadata))
photo_metadata=photo_metadata[ord,]
Photosurvey=cbind(photo_metadata, photosurvey_coverage)
str(Photosurvey)
library(ggplot)
ggplot(Photosurvey, aes(x=site, y=Chordata))+
geom_point()+
theme_light()
ggplot(Photosurvey, aes(x=site, y=Chordata))+
geom_point(position=position_jitter(width=0.2))+
theme_light()
ggplot(Photosurvey, aes(x=site, y=Chordata))+
geom_point(aes(color=as.factor(depth)),position=position_jitter(width=0.2))+
theme_light()
setwd("C:/Users/lenovo/Desktop/Research Methods B/Files for the class-20240711") # set working directory
#load the metadata- NOTE: we work at the transect level.
photo_metadata=read.csv("Photosurvey_metadata.csv", header=TRUE, row.names=1, stringsAsFactors = TRUE)
str(photo_metadata)
# load the processed and filtered coverage data by taxonomic group
photosurvey_coverage=read.csv("Photosurvey_processed_data.csv", header=TRUE, row.names=1, stringsAsFactors = TRUE)
str(photosurvey_coverage)
#make sure the order of trnasect_IDs is the same in the data and the metadata
ord=match(row.names(photosurvey_coverage), row.names(photo_metadata))
photo_metadata=photo_metadata[ord,]
Photosurvey=cbind(photo_metadata, photosurvey_coverage)
str(Photosurvey)
library(ggplot)
ggplot(Photosurvey, aes(x=site, y=Chordata))+
geom_point()+
theme_light()
ggplot(Photosurvey, aes(x=site, y=Chordata))+
geom_point(position=position_jitter(width=0.2))+
theme_light()
ggplot(Photosurvey, aes(x=site, y=Chordata))+
geom_point(aes(color=as.factor(depth)),position=position_jitter(width=0.2))+
theme_light()
ggplot(Photosurvey, aes(x=site, y=Chordata))+
geom_boxplot(outlier.shape = NA)+
geom_point(aes(color=as.factor(depth)),position=position_jitter(width=0.2))+
theme_light()
bartlett.test(Photosurvey$Chordata~Photosurvey$site)
kruskal.test(Chordata~site, data=Photosurvey)
ggplot(Photosurvey, aes(x=season, y=Chordata))+
geom_point()+
theme_light()
ggplot(Photosurvey, aes(x=season, y=Chordata))+
geom_point(position=position_jitter(width=0.2))+
theme_light()
ggplot(Photosurvey, aes(x=season, y=Chordata))+
geom_point(aes(color=as.factor(depth)),position=position_jitter(width=0.2))+
theme_light()
ggplot(Photosurvey, aes(x=season, y=Chordata, fill=site))+
geom_boxplot(outlier.shape = NA)+
geom_point(position=position_jitterdodge(jitter.width = 0.2), size=1)+
theme_light()+
facet_grid(.~depth)
### now let's test for all factors together- non-parametric anova
library(ARTool)
m=art(Chordata~site+as.factor(depth)+season+site*as.factor(depth)*season, data=Photosurvey)
anova(m)
ggplot(Photosurvey, aes(x=sampler, y=Chordata))+
geom_boxplot(outlier.shape = NA)+
geom_point(aes(color=as.factor(depth)),position=position_jitter(width=0.2))+
theme_light()
bartlett.test(Photosurvey$Chordata~Photosurvey$sampler)
kruskal.test(Chordata~sampler, data=Photosurvey)
library(Hmisc)
str(Photosurvey)
corrs=rcorr(as.matrix(Photosurvey[,10:22]), type="spearman")
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
#now we apply this function to our data
corrs_flat=flattenCorrMatrix(corrs$r, corrs$P)
#add p value adjustment using the Benjamini-Hochber method (BH)
corrs_flat$p.adj=p.adjust(corrs_flat$p, "BH")
write.csv(corrs_flat, "Taxonomic_groups_spearman.csv")
# now plot your correlation of interest e.g., my taxon of interest and live coverage
str(Photosurvey)
ggplot(Photosurvey, aes(x=Soft.Substrate, y=Chordata))+
geom_point()+
geom_smooth(method='lm')+
theme_light()
ggplot(Photosurvey, aes(x=live_coverage, y=Chordata))+
geom_point()+
geom_smooth(method='lm')+
theme_light()
